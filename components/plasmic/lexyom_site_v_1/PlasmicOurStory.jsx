// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3Qa6q3s1gm91eHXRuPwyBY
// Component: _3421pPjve
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import NavBar from "../../NavBar"; // plasmic-import: c0t49AwPo7/component
import YouTube from "@plasmicpkgs/react-youtube"; // plasmic-import: CHO21V9uYw/codeComponent
import CommunityItem from "../../CommunityItem"; // plasmic-import: ppvtbwqa_1/component
import Footer from "../../Footer"; // plasmic-import: 5S4FajIL-oi/component
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_lexyom_site_v_1.module.css"; // plasmic-import: 3Qa6q3s1gm91eHXRuPwyBY/projectcss
import sty from "./PlasmicOurStory.module.css"; // plasmic-import: _3421pPjve/css
import ContractSvgrepoComsvgIcon from "./icons/PlasmicIcon__ContractSvgrepoComsvg"; // plasmic-import: JdBWFQtGDc/icon
import StartupSvgrepoComsvgIcon from "./icons/PlasmicIcon__StartupSvgrepoComsvg"; // plasmic-import: TP5V41gxaG/icon
import DealSvgrepoComsvgIcon from "./icons/PlasmicIcon__DealSvgrepoComsvg"; // plasmic-import: FZlsgF0C0-/icon

export const PlasmicOurStory__VariantProps = new Array();

export const PlasmicOurStory__ArgProps = new Array();

function PlasmicOurStory__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <React.Fragment>
      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <NavBar
            data-plasmic-name={"navBar"}
            data-plasmic-override={overrides.navBar}
            className={classNames("__wab_instance", sty.navBar)}
          />

          <div
            data-plasmic-name={"hero"}
            data-plasmic-override={overrides.hero}
            className={classNames(projectcss.all, sty.hero)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__avb9E)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__wyU2A
                )}
              >
                {"Helping founders scale their business!"}
              </div>
            </div>
          </div>

          <div
            data-plasmic-name={"aboutMiddleSection"}
            data-plasmic-override={overrides.aboutMiddleSection}
            className={classNames(projectcss.all, sty.aboutMiddleSection)}
          >
            <div
              data-plasmic-name={"mission1"}
              data-plasmic-override={overrides.mission1}
              className={classNames(projectcss.all, sty.mission1)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__rnYxB)}
              >
                <div className={classNames(projectcss.all, sty.column__zlxst)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___0BtF
                    )}
                  >
                    {"Our Mission"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__gWaF9
                    )}
                  >
                    {
                      "There's this notion that to get access to proper legal solutions, you definitely need to break the bank. In ancient Rome, lawyers used to practice their profession freely and honorably. We believe that there is more to legal than the bottom line, and that access to quality legal solutions should not be reserved to a limited elite. No business should ever have to fail for not having access to quality, affordable legal solutions. We are strongly committed to making legal accessible to all, all while growing with a conscience and a soul - and immense  passion for what we do. We're extremely happy to be part of so many business' success journeys and are committed to carrying on embracing every day as day 1 until we put legal in everyone's pocket, making it accessible to all.\n"
                    }
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.column__ehp16)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__ylB)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/lexyom_site_v_1/images/frame1Jpg.jpeg",
                      fullWidth: 2164,
                      fullHeight: 1387,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </p.Stack>
            </div>

            <div
              data-plasmic-name={"mission2"}
              data-plasmic-override={overrides.mission2}
              className={classNames(projectcss.all, sty.mission2)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ikUfc
                )}
              >
                {"Our Story"}
              </div>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__a5EeD)}
              >
                <div className={classNames(projectcss.all, sty.column__uxlJp)}>
                  <YouTube
                    data-plasmic-name={"youTube"}
                    data-plasmic-override={overrides.youTube}
                    className={classNames("__wab_instance", sty.youTube)}
                    modestbranding={true}
                    playsinline={true}
                    rel={false}
                    videoId={"LgZhysSIC-I"}
                  />
                </div>

                <div className={classNames(projectcss.all, sty.column__hMhx)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___3RIw
                    )}
                  >
                    {
                      "After graduating from New York Law School and spending some time working on wall street, Rami started to notice that a new category of clients started to emerge: Startups & Venture Capital Firms. His passion for technology drove him to open a law firm specialized in technology. Rami and Nadine, alongside an amazing team, further capitalized on the idea while opting for a  digital transformation of the business after witnessing the struggle many entrepreneurs had with legal. \n\nFrom this observation, a company was born: Lexyom! It was built on the notice that everyone has an unequivocal right to access quality legal solutions. \n\nToday, the legal for all movement created by Lexyom continues to empower founders around the world to help them focus on what truly matters: growing their Business!"
                    }
                  </div>
                </div>
              </p.Stack>
            </div>
          </div>

          <div
            data-plasmic-name={"community"}
            data-plasmic-override={overrides.community}
            className={classNames(projectcss.all, sty.community)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___0O3N5
              )}
            >
              {"Our Community"}
            </div>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__cr9I0)}
            >
              <div className={classNames(projectcss.all, sty.column__yH3F)}>
                <CommunityItem
                  className={classNames(
                    "__wab_instance",
                    sty.communityItem___8I0X7
                  )}
                  slot={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bt5Eg
                      )}
                    >
                      {"Legal documents"}
                    </div>
                  }
                  slot2={"created"}
                  slot3={
                    <ContractSvgrepoComsvgIcon
                      className={classNames(projectcss.all, sty.svg__mLNkU)}
                      role={"img"}
                    />
                  }
                >
                  {"1000+"}
                </CommunityItem>
              </div>

              <div className={classNames(projectcss.all, sty.column__p6Cua)}>
                <CommunityItem
                  className={classNames(
                    "__wab_instance",
                    sty.communityItem__uzJf
                  )}
                  slot={"Startups"}
                  slot2={"impacted"}
                  slot3={
                    <StartupSvgrepoComsvgIcon
                      className={classNames(projectcss.all, sty.svg__zPilK)}
                      role={"img"}
                    />
                  }
                >
                  {"500+"}
                </CommunityItem>
              </div>

              <div className={classNames(projectcss.all, sty.column__t0KVx)}>
                <CommunityItem
                  className={classNames(
                    "__wab_instance",
                    sty.communityItem__foelj
                  )}
                  slot={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jUv
                      )}
                    >
                      {"in financing"}
                    </div>
                  }
                  slot2={"closed"}
                  slot3={
                    <DealSvgrepoComsvgIcon
                      className={classNames(projectcss.all, sty.svg___0H6Cm)}
                      role={"img"}
                    />
                  }
                >
                  {"50M$+"}
                </CommunityItem>
              </div>
            </p.Stack>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__wtAnx)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__ldRz)}
              displayHeight={"auto"}
              displayMaxHeight={"300px"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              loading={"lazy"}
              src={{
                src: "/plasmic/lexyom_site_v_1/images/v1Png.png",
                fullWidth: 2392,
                fullHeight: 1346,
                aspectRatio: undefined
              }}
            />
          </div>

          <div
            data-plasmic-name={"quote"}
            data-plasmic-override={overrides.quote}
            className={classNames(projectcss.all, sty.quote)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__kxRgm)}>
              <div className={classNames(projectcss.all, sty.freeBox__nGp5K)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__lwpgy
                  )}
                >
                  {'"'}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__lRgS4
                  )}
                >
                  {"What was Mockery yesterday is the new cool today."}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__zuOAv
                  )}
                >
                  {'"'}
                </div>
              </div>

              <div className={classNames(projectcss.all, sty.freeBox__gvtjj)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__h7Hi
                  )}
                >
                  {"—Rami Alame"}
                </div>
              </div>
            </div>
          </div>

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "navBar",
    "hero",
    "aboutMiddleSection",
    "mission1",
    "mission2",
    "youTube",
    "community",
    "quote",
    "footer"
  ],

  navBar: ["navBar"],
  hero: ["hero"],
  aboutMiddleSection: ["aboutMiddleSection", "mission1", "mission2", "youTube"],
  mission1: ["mission1"],
  mission2: ["mission2", "youTube"],
  youTube: ["youTube"],
  community: ["community"],
  quote: ["quote"],
  footer: ["footer"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicOurStory__ArgProps,
      internalVariantPropNames: PlasmicOurStory__VariantProps
    });

    return PlasmicOurStory__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicOurStory";
  } else {
    func.displayName = `PlasmicOurStory.${nodeName}`;
  }
  return func;
}

export const PlasmicOurStory = Object.assign(
  // Top-level PlasmicOurStory renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navBar: makeNodeComponent("navBar"),
    hero: makeNodeComponent("hero"),
    aboutMiddleSection: makeNodeComponent("aboutMiddleSection"),
    mission1: makeNodeComponent("mission1"),
    mission2: makeNodeComponent("mission2"),
    youTube: makeNodeComponent("youTube"),
    community: makeNodeComponent("community"),
    quote: makeNodeComponent("quote"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicOurStory
    internalVariantProps: PlasmicOurStory__VariantProps,
    internalArgProps: PlasmicOurStory__ArgProps
  }
);

export default PlasmicOurStory;
/* prettier-ignore-end */
