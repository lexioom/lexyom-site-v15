// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3Qa6q3s1gm91eHXRuPwyBY
// Component: CEkNcJN1io
import * as React from "react";
import Link from "next/link";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import NavBar from "../../NavBar"; // plasmic-import: c0t49AwPo7/component
import Footer from "../../Footer"; // plasmic-import: 5S4FajIL-oi/component
import { useScreenVariants as useScreenVariantsglmAo6RxnuGek } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: GlmAO6RxnuGek/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_lexyom_site_v_1.module.css"; // plasmic-import: 3Qa6q3s1gm91eHXRuPwyBY/projectcss
import sty from "./PlasmicPricing.module.css"; // plasmic-import: CEkNcJN1io/css
import Icon4Icon from "./icons/PlasmicIcon__Icon4"; // plasmic-import: ai-qmtX9bxdJ/icon
import Icon14Icon from "./icons/PlasmicIcon__Icon14"; // plasmic-import: ulNJ0u9nwZGn/icon

export const PlasmicPricing__VariantProps = new Array();

export const PlasmicPricing__ArgProps = new Array();

function PlasmicPricing__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsglmAo6RxnuGek()
  });

  return (
    <React.Fragment>
      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <NavBar
            data-plasmic-name={"navBar"}
            data-plasmic-override={overrides.navBar}
            className={classNames("__wab_instance", sty.navBar)}
          />

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__tJ3Xu)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___07JK)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__hlF0X)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__kHn94)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__l5BVs
                    )}
                  >
                    {"Flat prices, no hidden fees!"}
                  </div>
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__kuMnc
                  )}
                >
                  {
                    "Choose what's right for your business and upgrade as you scale with Lexyom"
                  }
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__sbQ2D)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__nTaDc)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__hSOc4)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__nHjGt)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__ppe7E
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__cWrAr
                          )}
                        >
                          {"Starter"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__uzviG
                          )}
                        >
                          {"Perfect for solo founders and ideation phase\n"}
                        </div>
                      </p.Stack>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__jSLhG
                        )}
                      >
                        {"Free"}
                      </div>
                    </div>

                    <p.Stack
                      as={p.PlasmicLink}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__yaFx
                      )}
                      component={Link}
                      href={"https://app.lexyom.com/register"}
                      link={""}
                      platform={"nextjs"}
                    >
                      {false ? (
                        <Icon4Icon
                          className={classNames(projectcss.all, sty.svg__lcqF6)}
                          role={"img"}
                        />
                      ) : null}

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__hEe5B
                        )}
                      >
                        {"Get started"}
                      </div>

                      {false ? (
                        <Icon4Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___5Aovh
                          )}
                          role={"img"}
                        />
                      ) : null}
                    </p.Stack>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___3Dh6B)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__rHmms)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__dqMi7
                        )}
                      >
                        <Icon14Icon
                          className={classNames(projectcss.all, sty.svg__rRbG)}
                          role={"img"}
                        />
                      </div>

                      {false ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__bQ2MT
                          )}
                        >
                          <Icon14Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__gKobe
                            )}
                            role={"img"}
                          />
                        </div>
                      ) : null}

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___8Syvf
                        )}
                      >
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__etZyk
                            )}
                          >
                            {"Label"}
                          </div>
                        ) : null}

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__f5Em5
                          )}
                        >
                          {"3 instant contracts"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__s1WSo)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__cYsbh
                        )}
                      >
                        <Icon14Icon
                          className={classNames(projectcss.all, sty.svg__gnBx)}
                          role={"img"}
                        />
                      </div>

                      {false ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__n1Evj
                          )}
                        >
                          <Icon14Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__pqklf
                            )}
                            role={"img"}
                          />
                        </div>
                      ) : null}

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__lnzzQ
                        )}
                      >
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__x6Mf0
                            )}
                          >
                            {"Label"}
                          </div>
                        ) : null}

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__q78WY
                          )}
                        >
                          {"1 Academy course"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__qEtNa)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__i5RaW
                        )}
                      >
                        <Icon14Icon
                          className={classNames(projectcss.all, sty.svg__upB1D)}
                          role={"img"}
                        />
                      </div>

                      {false ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__y7FlN
                          )}
                        >
                          <Icon14Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__ufvnc
                            )}
                            role={"img"}
                          />
                        </div>
                      ) : null}

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__f3Wt
                        )}
                      >
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__jHorH
                            )}
                          >
                            {"Label"}
                          </div>
                        ) : null}

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ynLti
                          )}
                        >
                          {"Unlimited document storage"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__fukOh)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__itght
                        )}
                      >
                        <Icon14Icon
                          className={classNames(projectcss.all, sty.svg__rpnpc)}
                          role={"img"}
                        />
                      </div>

                      {false ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__krrcf
                          )}
                        >
                          <Icon14Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__wZfCk
                            )}
                            role={"img"}
                          />
                        </div>
                      ) : null}

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__rWkq0
                        )}
                      >
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__yjotu
                            )}
                          >
                            {"Label"}
                          </div>
                        ) : null}

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ebpna
                          )}
                        >
                          {"Access to customized legal request"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__uHlDu)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__baDhm
                        )}
                      >
                        <Icon14Icon
                          className={classNames(projectcss.all, sty.svg__wOlNb)}
                          role={"img"}
                        />
                      </div>

                      {false ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__x1Xh
                          )}
                        >
                          <Icon14Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg___5DcIa
                            )}
                            role={"img"}
                          />
                        </div>
                      ) : null}

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__tQjXk
                        )}
                      >
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__cd6QN
                            )}
                          >
                            {"Label"}
                          </div>
                        ) : null}

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__xi916
                          )}
                        >
                          {"Chat support"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___6Sy4N
                      )}
                    >
                      {false ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___2Nk5Z
                          )}
                        >
                          <Icon14Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__grTyk
                            )}
                            role={"img"}
                          />
                        </div>
                      ) : null}

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__zRRrF
                        )}
                      >
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__x1DXu
                            )}
                          >
                            {"Label"}
                          </div>
                        ) : null}
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__edWt9)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___0HDk7)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__qBozR)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___2XOh
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___96SIv
                          )}
                        >
                          {"Pro"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__aNj3B
                          )}
                        >
                          {"Ideal for founders & businesses ready for growth"}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__xj5X
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__cXvFz
                          )}
                        >
                          {"$39"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___6XSl6
                          )}
                        >
                          {"/mo"}
                        </div>
                      </p.Stack>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__jsZhR
                        )}
                      >
                        {"billed annually "}
                      </div>
                    </div>

                    <p.Stack
                      as={p.PlasmicLink}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__mdoN2
                      )}
                      component={Link}
                      href={"https://app.lexyom.com/register"}
                      platform={"nextjs"}
                    >
                      {false ? (
                        <Icon4Icon
                          className={classNames(projectcss.all, sty.svg__sEzR3)}
                          role={"img"}
                        />
                      ) : null}

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___9VkEp
                        )}
                      >
                        {"Get Premium"}
                      </div>

                      {false ? (
                        <Icon4Icon
                          className={classNames(projectcss.all, sty.svg__sHaFn)}
                          role={"img"}
                        />
                      ) : null}
                    </p.Stack>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___6S6Gi)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__weYFl)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___0T8CX
                        )}
                      >
                        <Icon14Icon
                          className={classNames(projectcss.all, sty.svg__igjkl)}
                          role={"img"}
                        />
                      </div>

                      {false ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__dQZq
                          )}
                        >
                          <Icon14Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__y3Scw
                            )}
                            role={"img"}
                          />
                        </div>
                      ) : null}

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___0Wfjv
                        )}
                      >
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__udWkh
                            )}
                          >
                            {"Label"}
                          </div>
                        ) : null}

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__oTokj
                          )}
                        >
                          {"Unlimited instant contracts"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___1NXnw
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___2AwFm
                        )}
                      >
                        <Icon14Icon
                          className={classNames(projectcss.all, sty.svg__tzNyd)}
                          role={"img"}
                        />
                      </div>

                      {false ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__suWou
                          )}
                        >
                          <Icon14Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__njLiY
                            )}
                            role={"img"}
                          />
                        </div>
                      ) : null}

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__hiAZn
                        )}
                      >
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__rdCec
                            )}
                          >
                            {"Label"}
                          </div>
                        ) : null}

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__q59Qn
                          )}
                        >
                          {"Unlimited Academy courses"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___5EkIz
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__vUoW6
                        )}
                      >
                        <Icon14Icon
                          className={classNames(projectcss.all, sty.svg__hChiB)}
                          role={"img"}
                        />
                      </div>

                      {false ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___1MKq0
                          )}
                        >
                          <Icon14Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__bwXm4
                            )}
                            role={"img"}
                          />
                        </div>
                      ) : null}

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___8NLhz
                        )}
                      >
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__o0Wf
                            )}
                          >
                            {"Label"}
                          </div>
                        ) : null}

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__v5L1O
                          )}
                        >
                          {"Unlimited document storage"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__qrDpT)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__dVgLn
                        )}
                      >
                        <Icon14Icon
                          className={classNames(projectcss.all, sty.svg__n16Pj)}
                          role={"img"}
                        />
                      </div>

                      {false ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ztixF
                          )}
                        >
                          <Icon14Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__sXQpj
                            )}
                            role={"img"}
                          />
                        </div>
                      ) : null}

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__jxqMp
                        )}
                      >
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__bhkUi
                            )}
                          >
                            {"Label"}
                          </div>
                        ) : null}

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__b9Vx0
                          )}
                        >
                          {"Discounted customized legal request"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__bsx3E)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__rVhC
                        )}
                      >
                        <Icon14Icon
                          className={classNames(projectcss.all, sty.svg__kRZpy)}
                          role={"img"}
                        />
                      </div>

                      {false ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___9JHb
                          )}
                        >
                          <Icon14Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__s20Pp
                            )}
                            role={"img"}
                          />
                        </div>
                      ) : null}

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__qPbQe
                        )}
                      >
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__d1Xv3
                            )}
                          >
                            {"Label"}
                          </div>
                        ) : null}

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__kxt0Q
                          )}
                        >
                          {"Premium Chat Support"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__wr2Uz)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__lxWm
                        )}
                      >
                        <Icon14Icon
                          className={classNames(projectcss.all, sty.svg__s73Oy)}
                          role={"img"}
                        />
                      </div>

                      {false ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__xRhxC
                          )}
                        >
                          <Icon14Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__ve0JY
                            )}
                            role={"img"}
                          />
                        </div>
                      ) : null}

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__lruWv
                        )}
                      >
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__gsCid
                            )}
                          >
                            {"Label"}
                          </div>
                        ) : null}

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___2Oe6Z
                          )}
                        >
                          {"Investor Readiness Check"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__oc7Qd)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__pZg0Z
                        )}
                      >
                        <Icon14Icon
                          className={classNames(projectcss.all, sty.svg__zpns6)}
                          role={"img"}
                        />
                      </div>

                      {false ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__oaiag
                          )}
                        >
                          <Icon14Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__xPAmI
                            )}
                            role={"img"}
                          />
                        </div>
                      ) : null}

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___9EdZw
                        )}
                      >
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__dboTs
                            )}
                          >
                            {"Label"}
                          </div>
                        ) : null}

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__sOgSm
                          )}
                        >
                          {"Instant document health check "}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__r4ICm)}
                    >
                      {false ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__k24Y
                          )}
                        >
                          <Icon14Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__lGool
                            )}
                            role={"img"}
                          />
                        </div>
                      ) : null}

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__qy4O0
                        )}
                      >
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___4GqU
                            )}
                          >
                            {"Label"}
                          </div>
                        ) : null}
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__g92By)}
                    >
                      {false ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__j9Iwz
                          )}
                        >
                          <Icon14Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__yiSpt
                            )}
                            role={"img"}
                          />
                        </div>
                      ) : null}
                    </p.Stack>
                  </p.Stack>
                </div>
              </p.Stack>
            </p.Stack>
          </p.Stack>

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: ["root", "navBar", "footer"],
  navBar: ["navBar"],
  footer: ["footer"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicPricing__ArgProps,
      internalVariantPropNames: PlasmicPricing__VariantProps
    });

    return PlasmicPricing__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicPricing";
  } else {
    func.displayName = `PlasmicPricing.${nodeName}`;
  }
  return func;
}

export const PlasmicPricing = Object.assign(
  // Top-level PlasmicPricing renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navBar: makeNodeComponent("navBar"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicPricing
    internalVariantProps: PlasmicPricing__VariantProps,
    internalArgProps: PlasmicPricing__ArgProps
  }
);

export default PlasmicPricing;
/* prettier-ignore-end */
