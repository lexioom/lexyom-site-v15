// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3Qa6q3s1gm91eHXRuPwyBY
// Component: fjl1qf3oM_K
import * as React from "react";
import Head from "next/head";
import Link from "next/link";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Button from "../../Button"; // plasmic-import: jWSf9Dy_4GKo/component
import Cs from "../../Cs"; // plasmic-import: 6OgPDSshso/component
import YouTube from "@plasmicpkgs/react-youtube"; // plasmic-import: CHO21V9uYw/codeComponent
import GetStartedButtons from "../../GetStartedButtons"; // plasmic-import: 6aSq1B1u45/component
import Footer from "../../Footer"; // plasmic-import: 5S4FajIL-oi/component
import { useScreenVariants as useScreenVariantsglmAo6RxnuGek } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: GlmAO6RxnuGek/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_lexyom_site_v_1.module.css"; // plasmic-import: 3Qa6q3s1gm91eHXRuPwyBY/projectcss
import sty from "./PlasmicLimitedTimeOffer.module.css"; // plasmic-import: fjl1qf3oM_K/css
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: cZ4A75xhOp2J/icon
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: aLWinbrsfkwl/icon
import CheckSvgrepoComsvgIcon from "./icons/PlasmicIcon__CheckSvgrepoComsvg"; // plasmic-import: vga0cOM2JJz8u/icon

export const PlasmicLimitedTimeOffer__VariantProps = new Array();

export const PlasmicLimitedTimeOffer__ArgProps = new Array(
  "startIcon",
  "children",
  "endIcon",
  "startIcon2",
  "children2",
  "endIcon2"
);

function PlasmicLimitedTimeOffer__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsglmAo6RxnuGek()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{"Lexyom"}</title>
        <meta key="og:title" property="og:title" content={"Lexyom"} />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root2"}
          data-plasmic-override={overrides.root2}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root2
          )}
        >
          <p.Stack
            as={"div"}
            data-plasmic-name={"hero"}
            data-plasmic-override={overrides.hero}
            hasGap={true}
            className={classNames(projectcss.all, sty.hero)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__jrg3G)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__sYHd6
                )}
              >
                <React.Fragment>
                  <React.Fragment>{""}</React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#272727" }}
                  >
                    {"Simpler. Faster. Together."}
                  </span>
                  <React.Fragment>{""}</React.Fragment>
                </React.Fragment>
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__c9Tc
                )}
              >
                <React.Fragment>
                  <React.Fragment>{""}</React.Fragment>
                  <h1
                    data-plasmic-name={"h1"}
                    data-plasmic-override={overrides.h1}
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>
                        {"Your Business deserves a \n"}
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#FF4B14" }}
                      >
                        {"Legal Department"}
                      </span>
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </h1>
                  <React.Fragment>{""}</React.Fragment>
                </React.Fragment>
              </div>

              <div
                data-plasmic-name={"whatWeDoStack"}
                data-plasmic-override={overrides.whatWeDoStack}
                className={classNames(projectcss.all, sty.whatWeDoStack)}
              >
                {(
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? true
                    : true
                ) ? (
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xg7Z8
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#000000" }}
                      >
                        {"Unlimited Legal at your Fingertips"}
                      </span>
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </div>
                ) : null}
              </div>
            </div>

            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__npSyx)}
              displayHeight={"auto"}
              displayMaxHeight={"400px"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
              src={{
                src: "/plasmic/lexyom_site_v_1/images/undrawTeamSpiritReYl1Vpng.png",
                fullWidth: 1113,
                fullHeight: 750,
                aspectRatio: undefined
              }}
            />

            <p.PlasmicLink
              data-plasmic-name={"link"}
              data-plasmic-override={overrides.link}
              className={classNames(projectcss.all, projectcss.a, sty.link)}
              component={Link}
              href={"https://meetings.hubspot.com/nimad"}
              platform={"nextjs"}
            >
              <p.Stack
                as={"button"}
                hasGap={true}
                className={classNames(
                  projectcss.all,
                  projectcss.button,
                  sty.button__wGjHd,
                  ""
                )}
              >
                {true ? (
                  <div
                    data-plasmic-name={"startIconContainer2"}
                    data-plasmic-override={overrides.startIconContainer2}
                    className={classNames(
                      projectcss.all,
                      sty.startIconContainer2
                    )}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: (
                        <ChecksvgIcon
                          className={classNames(projectcss.all, sty.svg__dFmX)}
                          role={"img"}
                        />
                      ),

                      value: args.startIcon2,
                      className: classNames(sty.slotTargetStartIcon2)
                    })}
                  </div>
                ) : null}

                <div
                  data-plasmic-name={"contentContainer2"}
                  data-plasmic-override={overrides.contentContainer2}
                  className={classNames(projectcss.all, sty.contentContainer2)}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "Tell me more",
                    value: args.children2,
                    className: classNames(sty.slotTargetChildren2)
                  })}
                </div>

                {true ? (
                  <div
                    data-plasmic-name={"endIconContainer2"}
                    data-plasmic-override={overrides.endIconContainer2}
                    className={classNames(
                      projectcss.all,
                      sty.endIconContainer2
                    )}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: (
                        <Icon3Icon
                          className={classNames(projectcss.all, sty.svg__gyya0)}
                          role={"img"}
                        />
                      ),

                      value: args.endIcon2,
                      className: classNames(sty.slotTargetEndIcon2)
                    })}
                  </div>
                ) : null}
              </p.Stack>
            </p.PlasmicLink>
          </p.Stack>

          <div className={classNames(projectcss.all, sty.freeBox___2XvDy)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__ctTdy)}
            >
              <div className={classNames(projectcss.all, sty.column__upT8E)}>
                <div className={classNames(projectcss.all, sty.freeBox__iUf7B)}>
                  <h2
                    data-plasmic-name={"testimonialText6"}
                    data-plasmic-override={overrides.testimonialText6}
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.testimonialText6
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{"There's a "}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#FF4B14" }}
                      >
                        {"better"}
                      </span>
                      <React.Fragment>{" way to do things!"}</React.Fragment>
                    </React.Fragment>
                  </h2>

                  <Button
                    className={classNames("__wab_instance", sty.button__b89Mv)}
                    color={"red"}
                    link={"https://app.lexyom.com/login"}
                    shape={"rounded"}
                    showEndIcon={true}
                  />
                </div>
              </div>
            </p.Stack>
          </div>

          <div
            data-plasmic-name={"features"}
            data-plasmic-override={overrides.features}
            className={classNames(projectcss.all, sty.features)}
          >
            <p.Stack
              as={"section"}
              data-plasmic-name={"logos"}
              data-plasmic-override={overrides.logos}
              hasGap={true}
              className={classNames(projectcss.all, sty.logos)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"logoContainer"}
                data-plasmic-override={overrides.logoContainer}
                hasGap={true}
                className={classNames(projectcss.all, sty.logoContainer)}
              >
                <div
                  className={classNames(projectcss.all, sty.columns___3NNxU)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__sqy1G)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__azc9V)}
                    >
                      <h2
                        data-plasmic-name={"testimonialText"}
                        data-plasmic-override={overrides.testimonialText}
                        className={classNames(
                          projectcss.all,
                          projectcss.h2,
                          projectcss.__wab_text,
                          sty.testimonialText
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{"Can you "}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "#FF4B14" }}
                          >
                            {"relate"}
                          </span>
                          <React.Fragment>{"?"}</React.Fragment>
                        </React.Fragment>
                      </h2>

                      <Cs
                        data-plasmic-name={"cs"}
                        data-plasmic-override={overrides.cs}
                        className={classNames("__wab_instance", sty.cs)}
                      />
                    </div>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__xnqxn)}
                  >
                    <YouTube
                      data-plasmic-name={"youTube"}
                      data-plasmic-override={overrides.youTube}
                      className={classNames("__wab_instance", sty.youTube)}
                      controls={false}
                      modestbranding={false}
                      videoId={"ErzIJprytxk"}
                    />
                  </div>
                </div>
              </p.Stack>
            </p.Stack>

            <section
              data-plasmic-name={"computerScreenSection"}
              data-plasmic-override={overrides.computerScreenSection}
              className={classNames(projectcss.all, sty.computerScreenSection)}
            >
              <div
                data-plasmic-name={"twoSideBox"}
                data-plasmic-override={overrides.twoSideBox}
                className={classNames(projectcss.all, sty.twoSideBox)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__lAA)}>
                  <h2
                    data-plasmic-name={"testimonialText7"}
                    data-plasmic-override={overrides.testimonialText7}
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.testimonialText7
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#121212" }}
                      >
                        {"Unlimited Legal"}
                      </span>
                      <React.Fragment>{" for "}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#FF4B14" }}
                      >
                        {"as little"}
                      </span>
                      <React.Fragment>{" as 5,500 AED/month"}</React.Fragment>
                    </React.Fragment>
                  </h2>

                  <Button
                    className={classNames("__wab_instance", sty.button__xmv6R)}
                    color={"red"}
                    link={"https://app.lexyom.com/login"}
                    shape={"rounded"}
                    showEndIcon={true}
                  />
                </div>

                {(
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? true
                    : true
                ) ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox___9JDci)}
                  >
                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : true
                    ) ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__qrnRu
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__fx8
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___5Jph0
                            )}
                          >
                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__tB0O3
                              )}
                            >
                              <CheckSvgrepoComsvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__vCuob
                                )}
                                role={"img"}
                              />

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___2RLjj
                                )}
                              >
                                {"Unlimited consultation bookings"}
                              </div>
                            </p.Stack>

                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___3U4Lm
                              )}
                            >
                              <CheckSvgrepoComsvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___4TvKj
                                )}
                                role={"img"}
                              />

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__g9Zyd
                                )}
                              >
                                {"Unlimited personalized contracts"}
                              </div>
                            </p.Stack>

                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__fttzX
                              )}
                            >
                              <CheckSvgrepoComsvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__nTqYx
                                )}
                                role={"img"}
                              />

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___1IIuH
                                )}
                              >
                                {"Unlimited contract review"}
                              </div>
                            </p.Stack>

                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__ycMut
                              )}
                            >
                              <CheckSvgrepoComsvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__lBhsz
                                )}
                                role={"img"}
                              />

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__ed90N
                                )}
                              >
                                {"Monthly legal strategy meetings"}
                              </div>
                            </p.Stack>

                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__enubI
                              )}
                            >
                              <CheckSvgrepoComsvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__k0Zyv
                                )}
                                role={"img"}
                              />

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___9MMms
                                )}
                              >
                                {"Legal negotiations with external parties"}
                              </div>
                            </p.Stack>
                          </div>

                          <p.Stack
                            as={"button"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              projectcss.button,
                              sty.button__a1Sog,
                              ""
                            )}
                          >
                            {true ? (
                              <div
                                data-plasmic-name={"startIconContainer"}
                                data-plasmic-override={
                                  overrides.startIconContainer
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.startIconContainer
                                )}
                              >
                                {p.renderPlasmicSlot({
                                  defaultContents: (
                                    <ChecksvgIcon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__tgiy5
                                      )}
                                      role={"img"}
                                    />
                                  ),

                                  value: args.startIcon,
                                  className: classNames(sty.slotTargetStartIcon)
                                })}
                              </div>
                            ) : null}

                            <div
                              data-plasmic-name={"contentContainer"}
                              data-plasmic-override={overrides.contentContainer}
                              className={classNames(
                                projectcss.all,
                                sty.contentContainer
                              )}
                            >
                              {p.renderPlasmicSlot({
                                defaultContents: "Tell me more",
                                value: args.children,
                                className: classNames(sty.slotTargetChildren)
                              })}
                            </div>

                            {true ? (
                              <div
                                data-plasmic-name={"endIconContainer"}
                                data-plasmic-override={
                                  overrides.endIconContainer
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.endIconContainer
                                )}
                              >
                                {p.renderPlasmicSlot({
                                  defaultContents: (
                                    <Icon3Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__uq8Jn
                                      )}
                                      role={"img"}
                                    />
                                  ),

                                  value: args.endIcon,
                                  className: classNames(sty.slotTargetEndIcon)
                                })}
                              </div>
                            ) : null}
                          </p.Stack>
                        </div>
                      </div>
                    ) : null}
                  </div>
                ) : null}
              </div>
            </section>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__kmP8X
              )}
            >
              <React.Fragment>
                <React.Fragment>{""}</React.Fragment>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__prscI
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    <h3
                      data-plasmic-name={"h3"}
                      data-plasmic-override={overrides.h3}
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2__npBjO
                          )}
                        >
                          <React.Fragment>
                            <React.Fragment>{"Meet "}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#FF4B14" }}
                            >
                              {"your"}
                            </span>
                            <React.Fragment>
                              {" legal department"}
                            </React.Fragment>
                          </React.Fragment>
                        </h2>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </h3>
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </h2>
                <React.Fragment>{""}</React.Fragment>
              </React.Fragment>
            </div>

            <section
              data-plasmic-name={"signatureSection"}
              data-plasmic-override={overrides.signatureSection}
              className={classNames(projectcss.all, sty.signatureSection)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__mjqfk)}
              >
                <div className={classNames(projectcss.all, sty.column__k4D7C)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___4Fn0Z)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/lexyom_site_v_1/images/untitledDesign2Png.png",
                      fullWidth: 1414,
                      fullHeight: 2000,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___5CfDb
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      <h6
                        className={classNames(
                          projectcss.all,
                          projectcss.h6,
                          projectcss.__wab_text,
                          sty.h6__cxpwH
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700 }}
                          >
                            {"Cereen"}
                          </span>
                          <React.Fragment>
                            {
                              "\nHere to make sure your legal is organized and your needs are promptly met"
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </h6>
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.column___8GnbC)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__lzaLn)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/lexyom_site_v_1/images/untitledDesignpng.jpeg",
                      fullWidth: 1414,
                      fullHeight: 2000,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___8Nq
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      <h6
                        className={classNames(
                          projectcss.all,
                          projectcss.h6,
                          projectcss.__wab_text,
                          sty.h6__liCLx
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700 }}
                          >
                            {"Kaelle"}
                          </span>
                          <React.Fragment>
                            {
                              "\nYour go-to for making sure your legal roadmap is set and your strategy is well-structured"
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </h6>
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.column___9Wjnh)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__girAx)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/lexyom_site_v_1/images/untitledDesign1Png.png",
                      fullWidth: 1414,
                      fullHeight: 2000,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___4CKEv
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      <h6
                        className={classNames(
                          projectcss.all,
                          projectcss.h6,
                          projectcss.__wab_text,
                          sty.h6__uF8Oe
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700 }}
                          >
                            {"Eliane"}
                          </span>
                          <React.Fragment>
                            {
                              "\nYour very own legal wizard carrying out your incorporation, contract drafting and review"
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </h6>
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </div>
                </div>
              </p.Stack>
            </section>

            <section
              data-plasmic-name={"generateFastVideo"}
              data-plasmic-override={overrides.generateFastVideo}
              className={classNames(projectcss.all, sty.generateFastVideo)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__zgxn7)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns___8RCws)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__ac4MJ)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__brkL)}
                    >
                      <h2
                        data-plasmic-name={"testimonialText3"}
                        data-plasmic-override={overrides.testimonialText3}
                        className={classNames(
                          projectcss.all,
                          projectcss.h2,
                          projectcss.__wab_text,
                          sty.testimonialText3
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{"Lexyom "}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "#FF4B14" }}
                          >
                            {"changed"}
                          </span>
                          <React.Fragment>
                            {" the way these businesses do Legal!"}
                          </React.Fragment>
                        </React.Fragment>
                      </h2>
                    </div>

                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button___9Ag9R
                      )}
                      color={"red"}
                      link={"https://app.lexyom.com/login"}
                      shape={"rounded"}
                      showEndIcon={true}
                    />

                    <div
                      className={classNames(projectcss.all, sty.columns__cJvqT)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column___1A3I
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__kAejM)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"auto"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/lexyom_site_v_1/images/_500Png.png",
                            fullWidth: 900,
                            fullHeight: 900,
                            aspectRatio: undefined
                          }}
                        />
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__yyYva
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__q199H)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"auto"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/lexyom_site_v_1/images/faikpng.png",
                            fullWidth: 900,
                            fullHeight: 900,
                            aspectRatio: undefined
                          }}
                        />
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column___0DoS
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___287Vh)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"auto"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/lexyom_site_v_1/images/sandboxpng.png",
                            fullWidth: 900,
                            fullHeight: 900,
                            aspectRatio: undefined
                          }}
                        />
                      </div>
                    </div>
                  </div>
                </p.Stack>
              </div>
            </section>
          </div>

          <div
            data-plasmic-name={"restOfSite"}
            data-plasmic-override={overrides.restOfSite}
            className={classNames(projectcss.all, sty.restOfSite)}
          >
            {true ? (
              <section
                data-plasmic-name={"lastFeature"}
                data-plasmic-override={overrides.lastFeature}
                className={classNames(projectcss.all, sty.lastFeature)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__euSoq)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.columns__fHjGr)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__gtSgW)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__htxS6
                        )}
                      >
                        <h2
                          data-plasmic-name={"testimonialText4"}
                          data-plasmic-override={overrides.testimonialText4}
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.testimonialText4
                          )}
                        >
                          {"asdf"}
                        </h2>

                        <p
                          data-plasmic-name={"position4"}
                          data-plasmic-override={overrides.position4}
                          className={classNames(
                            projectcss.all,
                            projectcss.p,
                            projectcss.__wab_text,
                            sty.position4
                          )}
                        >
                          {"more infoasdfasd fasdfasd fasdfas dfasdf"}
                        </p>
                      </div>
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__t3T)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__ks89H)}
                        displayHeight={"auto"}
                        displayMaxHeight={"400px"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/lexyom_site_v_1/images/screenshot42Png.png",
                          fullWidth: 1630,
                          fullHeight: 1321,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                  </p.Stack>
                </div>
              </section>
            ) : null}

            <GetStartedButtons
              data-plasmic-name={"getStartedButtons"}
              data-plasmic-override={overrides.getStartedButtons}
              className={classNames("__wab_instance", sty.getStartedButtons)}
            />

            <Footer
              data-plasmic-name={"footer"}
              data-plasmic-override={overrides.footer}
              className={classNames("__wab_instance", sty.footer)}
            />
          </div>
        </p.Stack>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root2: [
    "root2",
    "hero",
    "h1",
    "whatWeDoStack",
    "link",
    "startIconContainer2",
    "contentContainer2",
    "endIconContainer2",
    "testimonialText6",
    "features",
    "logos",
    "logoContainer",
    "testimonialText",
    "cs",
    "youTube",
    "computerScreenSection",
    "twoSideBox",
    "testimonialText7",
    "startIconContainer",
    "contentContainer",
    "endIconContainer",
    "h3",
    "signatureSection",
    "generateFastVideo",
    "testimonialText3",
    "restOfSite",
    "lastFeature",
    "testimonialText4",
    "position4",
    "getStartedButtons",
    "footer"
  ],

  hero: [
    "hero",
    "h1",
    "whatWeDoStack",
    "link",
    "startIconContainer2",
    "contentContainer2",
    "endIconContainer2"
  ],

  h1: ["h1"],
  whatWeDoStack: ["whatWeDoStack"],
  link: [
    "link",
    "startIconContainer2",
    "contentContainer2",
    "endIconContainer2"
  ],

  startIconContainer2: ["startIconContainer2"],
  contentContainer2: ["contentContainer2"],
  endIconContainer2: ["endIconContainer2"],
  testimonialText6: ["testimonialText6"],
  features: [
    "features",
    "logos",
    "logoContainer",
    "testimonialText",
    "cs",
    "youTube",
    "computerScreenSection",
    "twoSideBox",
    "testimonialText7",
    "startIconContainer",
    "contentContainer",
    "endIconContainer",
    "h3",
    "signatureSection",
    "generateFastVideo",
    "testimonialText3"
  ],

  logos: ["logos", "logoContainer", "testimonialText", "cs", "youTube"],
  logoContainer: ["logoContainer", "testimonialText", "cs", "youTube"],
  testimonialText: ["testimonialText"],
  cs: ["cs"],
  youTube: ["youTube"],
  computerScreenSection: [
    "computerScreenSection",
    "twoSideBox",
    "testimonialText7",
    "startIconContainer",
    "contentContainer",
    "endIconContainer"
  ],

  twoSideBox: [
    "twoSideBox",
    "testimonialText7",
    "startIconContainer",
    "contentContainer",
    "endIconContainer"
  ],

  testimonialText7: ["testimonialText7"],
  startIconContainer: ["startIconContainer"],
  contentContainer: ["contentContainer"],
  endIconContainer: ["endIconContainer"],
  h3: ["h3"],
  signatureSection: ["signatureSection"],
  generateFastVideo: ["generateFastVideo", "testimonialText3"],
  testimonialText3: ["testimonialText3"],
  restOfSite: [
    "restOfSite",
    "lastFeature",
    "testimonialText4",
    "position4",
    "getStartedButtons",
    "footer"
  ],

  lastFeature: ["lastFeature", "testimonialText4", "position4"],
  testimonialText4: ["testimonialText4"],
  position4: ["position4"],
  getStartedButtons: ["getStartedButtons"],
  footer: ["footer"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicLimitedTimeOffer__ArgProps,
      internalVariantPropNames: PlasmicLimitedTimeOffer__VariantProps
    });

    return PlasmicLimitedTimeOffer__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root2") {
    func.displayName = "PlasmicLimitedTimeOffer";
  } else {
    func.displayName = `PlasmicLimitedTimeOffer.${nodeName}`;
  }
  return func;
}

export const PlasmicLimitedTimeOffer = Object.assign(
  // Top-level PlasmicLimitedTimeOffer renders the root element
  makeNodeComponent("root2"),
  {
    // Helper components rendering sub-elements
    hero: makeNodeComponent("hero"),
    h1: makeNodeComponent("h1"),
    whatWeDoStack: makeNodeComponent("whatWeDoStack"),
    link: makeNodeComponent("link"),
    startIconContainer2: makeNodeComponent("startIconContainer2"),
    contentContainer2: makeNodeComponent("contentContainer2"),
    endIconContainer2: makeNodeComponent("endIconContainer2"),
    testimonialText6: makeNodeComponent("testimonialText6"),
    features: makeNodeComponent("features"),
    logos: makeNodeComponent("logos"),
    logoContainer: makeNodeComponent("logoContainer"),
    testimonialText: makeNodeComponent("testimonialText"),
    cs: makeNodeComponent("cs"),
    youTube: makeNodeComponent("youTube"),
    computerScreenSection: makeNodeComponent("computerScreenSection"),
    twoSideBox: makeNodeComponent("twoSideBox"),
    testimonialText7: makeNodeComponent("testimonialText7"),
    startIconContainer: makeNodeComponent("startIconContainer"),
    contentContainer: makeNodeComponent("contentContainer"),
    endIconContainer: makeNodeComponent("endIconContainer"),
    h3: makeNodeComponent("h3"),
    signatureSection: makeNodeComponent("signatureSection"),
    generateFastVideo: makeNodeComponent("generateFastVideo"),
    testimonialText3: makeNodeComponent("testimonialText3"),
    restOfSite: makeNodeComponent("restOfSite"),
    lastFeature: makeNodeComponent("lastFeature"),
    testimonialText4: makeNodeComponent("testimonialText4"),
    position4: makeNodeComponent("position4"),
    getStartedButtons: makeNodeComponent("getStartedButtons"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicLimitedTimeOffer
    internalVariantProps: PlasmicLimitedTimeOffer__VariantProps,
    internalArgProps: PlasmicLimitedTimeOffer__ArgProps
  }
);

export default PlasmicLimitedTimeOffer;
/* prettier-ignore-end */
